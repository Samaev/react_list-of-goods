{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","IsVisible","isReversed","sortBy","toShowGoods","setState","reverse","sortAlphabetically","sortByLength","reset","this","copyGoods","sort","good1","good2","length","localeCompare","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,WAAW,EACXC,YAAY,EACZC,OAAQ,I,EAGVC,YAAc,WACZ,EAAKC,SAAS,CAAEJ,WAAW,K,EAG7BK,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gB,EAIvBK,mBAAqB,WACnB,EAAKF,SAAS,CAAEF,OAAQ,c,EAG1BK,aAAe,WACb,EAAKH,SAAS,CAAEF,OAAQ,Y,EAG1BM,MAAQ,WACN,EAAKJ,SAAS,CAAEH,YAAY,EAAOC,OAAQ,M,4CAG7C,WACE,MAKIO,KAAKX,MAJPC,EADF,EACEA,MACAE,EAFF,EAEEA,WACAC,EAHF,EAGEA,OACAF,EAJF,EAIEA,UAGIU,EAAS,YAAOX,GAkBtB,OAhBAW,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQX,GACN,IAAK,SACH,OAAOU,EAAME,OAASD,EAAMC,OAC9B,IAAK,WACH,OAAOF,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAITZ,GACFS,EAAUL,UAIV,sBAAKW,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,mBACChB,GACC,oBAAIgB,UAAU,eAAd,0DAKDhB,GACC,wBACEgB,UAAU,uBACVC,KAAK,SACLC,QAAST,KAAKN,YAHhB,oBAQAH,GACA,sBAAKgB,UAAU,UAAf,UACE,oBAAIA,UAAU,OAAd,SACGN,EAAUS,KAAI,SAAAC,GAAI,OACjB,oBACEJ,UAAU,aADZ,SAIGI,GAFIA,QAMX,wBACEJ,UAAU,SACVC,KAAK,SACLC,QAAST,KAAKJ,QAHhB,qBAOA,wBACEW,UAAU,SACVC,KAAK,SACLC,QAAST,KAAKH,mBAHhB,iCAOA,wBACEU,UAAU,SACVC,KAAK,SACLC,QAAST,KAAKF,aAHhB,4BAOA,wBACES,UAAU,SACVC,KAAK,SACLC,QAAST,KAAKD,MAHhB,6B,GA3GMa,IAAMC,WAyHTzB,IC7If0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.28785ed2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  IsVisible: boolean,\n  isReversed: boolean,\n  sortBy: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    IsVisible: true,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  toShowGoods = () => {\n    this.setState({ IsVisible: false });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortBy: 'alphabet' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortBy: '' });\n  };\n\n  render() {\n    const {\n      goods,\n      isReversed,\n      sortBy,\n      IsVisible,\n    } = this.state;\n\n    const copyGoods = [...goods];\n\n    copyGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'length':\n          return good1.length - good2.length;\n        case 'alphabet':\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyGoods.reverse();\n    }\n\n    return (\n      <div className=\"App box\">\n        <h1 className=\"message-header\">Goods</h1>\n        {IsVisible && (\n          <h3 className=\"message-body\">\n            Everything starts here.\n            Just push the button\n          </h3>\n        )}\n        {IsVisible && (\n          <button\n            className=\"button button__start\"\n            type=\"button\"\n            onClick={this.toShowGoods}\n          >\n            Start\n          </button>\n        )}\n        {!IsVisible && (\n          <div className=\"wrapper\">\n            <ul className=\"list\">\n              {copyGoods.map(good => (\n                <li\n                  className=\"list__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}