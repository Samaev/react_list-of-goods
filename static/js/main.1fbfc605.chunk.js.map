{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","goods","isVisible","isReversed","isSorted","sortBy","NONE","toShowGoods","setState","reverse","sortAlphabetically","ALPHABET","sortByLength","LENGTH","reset","this","sortedGoods","copyGoods","sort","good1","good2","length","localeCompare","getOrderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAwBKA,E,kFArBCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAWGD,O,uBAAAA,I,mBAAAA,I,gBAAAA,M,SAmCCE,E,4MACJC,MAAyB,CACvBC,MAAOH,EACPI,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,OAAQR,EAASS,M,EAGnBC,YAAc,WACZ,EAAKC,UAAS,SAACR,GAAD,MAAY,CACxBE,WAAYF,EAAME,e,EAItBO,QAAU,WACR,EAAKD,UAAS,SAAAR,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gB,EAIvBO,mBAAqB,WACnB,EAAKF,SAAS,CACZH,OAAQR,EAASc,SACjBP,UAAU,K,EAIdQ,aAAe,WACb,EAAKJ,SAAS,CACZH,OAAQR,EAASgB,OACjBT,UAAU,K,EAIdU,MAAQ,WACN,EAAKN,SAAS,CACZL,YAAY,EACZE,OAAQR,EAASS,KACjBF,UAAU,K,4CAId,WACE,IAAQF,EAAca,KAAKf,MAAnBE,UAEFc,EA3EV,SACEf,EACAI,EACAD,EACAD,GAEA,IAAMc,EAAS,YAAOhB,GAoBtB,OAlBIG,GACFa,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQf,GACN,KAAKR,EAASgB,OACZ,OAAOM,EAAME,OAASD,EAAMC,OAC9B,KAAKxB,EAASc,SACZ,OAAOQ,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXjB,GACFc,EAAUR,UAGLQ,EAiDeM,CAClBR,KAAKf,MAAMC,MACXc,KAAKf,MAAMK,OACXU,KAAKf,MAAMI,SACXW,KAAKf,MAAMG,YAGb,OACE,sBAAKqB,UAAU,UAAf,UACE,oBAAIA,UAAU,iBAAd,mBACCtB,GACC,gCACE,oBAAIsB,UAAU,eAAd,0DAIA,wBACEA,UAAU,uBACVC,KAAK,SACLC,QAASX,KAAKR,YAHhB,uBASFL,GACA,sBAAKsB,UAAU,UAAf,UACE,oBAAIA,UAAU,OAAd,SACGR,EAAYW,KAAI,SAAAC,GAAI,OACnB,oBACEJ,UAAU,aADZ,SAIGI,GAFIA,QAMX,wBACEJ,UAAU,SACVC,KAAK,SACLC,QAASX,KAAKN,QAHhB,qBAOA,wBACEe,UAAU,SACVC,KAAK,SACLC,QAASX,KAAKL,mBAHhB,iCAOA,wBACEc,UAAU,SACVC,KAAK,SACLC,QAASX,KAAKH,aAHhB,4BAOA,wBACEY,UAAU,SACVC,KAAK,SACLC,QAASX,KAAKD,MAHhB,6B,GAxGMe,IAAMC,WAsHT/B,IC9KfgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1fbfc605.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  isVisible: boolean,\n  isReversed: boolean,\n  sortBy: SortType,\n  isSorted: boolean,\n};\n\nenum SortType {\n  ALPHABET,\n  LENGTH,\n  NONE,\n}\n\nfunction getOrderedGoods(\n  goods: string[],\n  sortBy: SortType,\n  isSorted: boolean,\n  isReversed: boolean,\n) {\n  const copyGoods = [...goods];\n\n  if (isSorted) {\n    copyGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    copyGoods.reverse();\n  }\n\n  return copyGoods;\n}\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    goods: goodsFromServer,\n    isVisible: true,\n    isReversed: false,\n    isSorted: false,\n    sortBy: SortType.NONE,\n  };\n\n  toShowGoods = () => {\n    this.setState((state) => ({\n      isVisible: !state.isVisible,\n    }));\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortBy: SortType.ALPHABET,\n      isSorted: true,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: SortType.LENGTH,\n      isSorted: true,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortType.NONE,\n      isSorted: false,\n    });\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    const sortedGoods = getOrderedGoods(\n      this.state.goods,\n      this.state.sortBy,\n      this.state.isSorted,\n      this.state.isReversed,\n    );\n\n    return (\n      <div className=\"App box\">\n        <h1 className=\"message-header\">Goods</h1>\n        {isVisible && (\n          <div>\n            <h3 className=\"message-body\">\n              Everything starts here.\n              Just push the button\n            </h3>\n            <button\n              className=\"button button__start\"\n              type=\"button\"\n              onClick={this.toShowGoods}\n            >\n              Start\n            </button>\n          </div>\n        )}\n        {!isVisible && (\n          <div className=\"wrapper\">\n            <ul className=\"list\">\n              {sortedGoods.map(good => (\n                <li\n                  className=\"list__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.sortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}